{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { fetchAccounts } from \"../api/account.api\";\nexport const useAccounts = () => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchAccounts().then(setAccounts).catch(err => setError(err.message)).finally(() => setLoading(false));\n  }, []);\n  return {\n    accounts,\n    loading,\n    error\n  };\n};\n_s(useAccounts, \"v7BeaDmwrBy1BZ0ni/ZS6Wl6sY0=\");","map":{"version":3,"names":["useEffect","useState","fetchAccounts","useAccounts","_s","accounts","setAccounts","loading","setLoading","error","setError","then","catch","err","message","finally"],"sources":["C:/Users/user/Desktop/Dgpays staj/PocketBank/frontend/src/modules/accounts/hooks/useAccounts.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { fetchAccounts } from \"../api/account.api\";\r\nimport { Account } from \"../types/account\";\r\n\r\nexport const useAccounts = () => {\r\n  const [accounts, setAccounts] = useState<Account[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchAccounts()\r\n      .then(setAccounts)\r\n      .catch((err) => setError(err.message))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  return { accounts, loading, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,oBAAoB;AAGlD,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACdE,aAAa,CAAC,CAAC,CACZS,IAAI,CAACL,WAAW,CAAC,CACjBM,KAAK,CAAEC,GAAG,IAAKH,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC,CAAC,CACrCC,OAAO,CAAC,MAAMP,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEH,QAAQ;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACrC,CAAC;AAACL,EAAA,CAbWD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}